version: '3.8'

services:
  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:26.3.2
    environment:
      # KEYCLOAK_ADMIN: admin
      # KEYCLOAK_ADMIN_PASSWORD: admin
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
      KC_HOSTNAME_URL: http://${PUBLIC_IP_ADDRESS}:${NGINX_ACCESS_PORT}
      KC_HTTP_ENABLED: true
      KC_PROXY: edge
      KC_LOG_LEVEL: debug
      KC_HOSTNAME_STRICT_BACKCHANNEL: true
      KC_HOSTNAME_ADMIN_URL: http://${PUBLIC_IP_ADDRESS}:${NGINX_ACCESS_PORT}
    volumes:
      - keycloak-vol:/opt/keycloak/data
    # ports:
    #   - "8090:8080"
    command: ["start-dev"]
    networks:
      - backend-ifco
    healthcheck:                # Esto hace que Docker monitoree si Keycloak est치 listo respondiendo por HTTP.
      test: ["CMD", "curl", "-f", "http://localhost:8080/realms/master"]
      interval: 10s             # interval: revisa cada 10 segundos.
      timeout: 5s               # timeout: si tarda m치s de 5s en responder, lo considera fallido.
      retries: 10               # retries: lo intenta hasta 10 veces antes de marcarlo como "unhealthy".  

  nginx:
    container_name: nginx
    image: nginx:stable
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    command: ['nginx-debug', '-g', 'daemon off;']  # Lanza el servidor Nginx en modo "debug", -g 'daemon off;' es una instrucci칩n est치ndar para que Nginx no se ejecute en segundo plano
    ports:
      - ${NGINX_ACCESS_PORT}:80
    restart: always
    depends_on:
      - keycloak
    networks:
      - backend-ifco

  # oauth2-proxy:
  #   container_name: oauth2-proxy
  #   image: quay.io/oauth2-proxy/oauth2-proxy:v7.11.0
  #   environment:
  #     OAUTH2_PROXY_PROVIDER: keycloak
  #     OAUTH2_PROXY_CLIENT_ID: ${OAUTH2_PROXY_CLIENT_ID}
  #     OAUTH2_PROXY_COOKIE_SECRET: ${AUTH2_PROXY_COOKIE_SECRET}
  #     OAUTH2_PROXY_CLIENT_SECRET: ${OAUTH2_PROXY_CLIENT_SECRET}
  #     OAUTH2_PROXY_REDIRECT_URL: http://localhost:8040/oauth2/callback
  #     OAUTH2_PROXY_OIDC_ISSUER_URL: "http://keycloak:8080/realms/master"
  #     OAUTH2_PROXY_EMAIL_DOMAINS: "*"
  #     OAUTH2_PROXY_UPSTREAMS: http://host.docker.internal:8080/ # Tu backend
  #     OAUTH2_PROXY_HTTP_ADDRESS: "0.0.0.0:4180"
  #     OAUTH2_PROXY_KEYCLOAK_REALM: ${REALM_NAME}
  #     OAUTH2_PROXY_KEYCLOAK_URL: http://keycloak:8080/realms/master
  #     OAUTH2_PROXY_SKIP_PROVIDER_BUTTON: "true"
  #   depends_on:
  #     - keycloak
  #   networks:
  #     - backend-ifco


  # django:
  #   container_name: django
  #   build: ./backend
  #   ports:
  #     - "8080:8080"
  #   depends_on:
  #     - sqlserver
  #   networks:
  #     - backend-ifco

#   sqlserver:
#     image: mcr.microsoft.com/mssql/server:2019-latest
#     environment:
#       SA_PASSWORD: "Your_password123"
#       ACCEPT_EULA: "Y"
#     ports:
#       - "1433:1433"
#     networks:
#       - backend

networks:
  backend-ifco:

volumes:
  keycloak-vol:
    external: false
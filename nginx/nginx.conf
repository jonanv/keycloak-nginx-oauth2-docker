server {
    listen       80;
    listen  [::]:80;
    server_name  localhost;

    # charset koi8-r;
    # access_log  /var/log/nginx/host.access.log  main;
    # port_in_redirect off;

    location / {
        # root   /usr/share/nginx/html;
        # index  index.html index.htm;

        # Keycloak
        proxy_pass http://keycloak:8080;
        proxy_connect_timeout 1s;
        proxy_read_timeout 2s;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;

        proxy_next_upstream error timeout http_502 http_503 http_504;
        error_page 502 504 =200 /index.html;

        # # OAuth2 Proxy
        # auth_request /oauth2/auth;
        # error_page 401 = /oauth2/start;

        # # proxy_pass http://django:8000;  # <- Cambia esto por tu backend real
        # proxy_pass http://host.docker.internal:8080/;
        # proxy_set_header Host $host;
        # proxy_set_header X-Real-IP $remote_addr;
        # proxy_set_header X-Scheme $scheme;

        # proxy_set_header X-Auth-Request-User $remote_user;
        # proxy_set_header X-Auth-Request-Email $http_x_auth_request_email;
        # proxy_set_header X-Auth-Request-Access-Token $http_authorization;
    }

    location = /index.html {
        root /usr/share/nginx/html;
    }

    # # Rutas manejadas por oauth2-proxy (login, callback, logout, etc.)
    # location /oauth2/ {
    #     proxy_pass http://oauth2-proxy:4180;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Scheme $scheme;
    #     proxy_set_header X-Auth-Request-Redirect $request_uri;
    # }

    # # Ruta de validación de sesión (oauth2-proxy devuelve 202 o 401)
    # location = /oauth2/auth {
    #     proxy_pass http://oauth2-proxy:4180/oauth2/auth;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Scheme $scheme;
    #     proxy_set_header Content-Length "";
    #     proxy_pass_request_body off;
    # }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}
